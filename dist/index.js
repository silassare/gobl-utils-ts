import GoblSinglePKEntity from './GoblSinglePKEntity';
import GoblEntity from './GoblEntity';
import { toInstance } from './gobl';
export * from './gobl';
export * from './GoblSinglePKEntity';
export * from './GoblEntity';
const realJSONParse = JSON.parse, goblJSONParse = function (text, reviver) {
    return realJSONParse(text, function (key, value) {
        if (typeof reviver === 'function') {
            value = reviver(key, value);
        }
        if (Object.prototype.toString.call(value) === '[object Object]') {
            const i = toInstance(value, true);
            if (i) {
                return i;
            }
        }
        return value;
    });
};
JSON.parse = goblJSONParse;
export { GoblEntity, GoblSinglePKEntity };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxrQkFBa0IsTUFBTSxzQkFBc0IsQ0FBQztBQUN0RCxPQUFPLFVBQVUsTUFBTSxjQUFjLENBQUM7QUFDdEMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNwQyxjQUFjLFFBQVEsQ0FBQztBQUN2QixjQUFjLHNCQUFzQixDQUFDO0FBQ3JDLGNBQWMsY0FBYyxDQUFDO0FBRTdCLE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQy9CLGFBQWEsR0FBRyxVQUNmLElBQVMsRUFDVCxPQUF1QztJQUV2QyxPQUFPLGFBQWEsQ0FBQyxJQUFJLEVBQUUsVUFBVSxHQUFHLEVBQUUsS0FBSztRQUM5QyxJQUFJLE9BQU8sT0FBTyxLQUFLLFVBQVUsRUFBRTtZQUNsQyxLQUFLLEdBQUcsT0FBTyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztTQUM1QjtRQUVELElBQUksTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLGlCQUFpQixFQUFFO1lBQ2hFLE1BQU0sQ0FBQyxHQUFHLFVBQVUsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDbEMsSUFBSSxDQUFDLEVBQUU7Z0JBQ04sT0FBTyxDQUFDLENBQUM7YUFDVDtTQUNEO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFDZCxDQUFDLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVILElBQUksQ0FBQyxLQUFLLEdBQUcsYUFBYSxDQUFDO0FBRTNCLE9BQU8sRUFBRSxVQUFVLEVBQUUsa0JBQWtCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHb2JsU2luZ2xlUEtFbnRpdHkgZnJvbSAnLi9Hb2JsU2luZ2xlUEtFbnRpdHknO1xuaW1wb3J0IEdvYmxFbnRpdHkgZnJvbSAnLi9Hb2JsRW50aXR5JztcbmltcG9ydCB7IHRvSW5zdGFuY2UgfSBmcm9tICcuL2dvYmwnO1xuZXhwb3J0ICogZnJvbSAnLi9nb2JsJztcbmV4cG9ydCAqIGZyb20gJy4vR29ibFNpbmdsZVBLRW50aXR5JztcbmV4cG9ydCAqIGZyb20gJy4vR29ibEVudGl0eSc7XG5cbmNvbnN0IHJlYWxKU09OUGFyc2UgPSBKU09OLnBhcnNlLFxuXHRnb2JsSlNPTlBhcnNlID0gZnVuY3Rpb24gKFxuXHRcdHRleHQ6IGFueSxcblx0XHRyZXZpdmVyPzogKGtleTogYW55LCB2YWx1ZTogYW55KSA9PiBhbnksXG5cdCkge1xuXHRcdHJldHVybiByZWFsSlNPTlBhcnNlKHRleHQsIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG5cdFx0XHRpZiAodHlwZW9mIHJldml2ZXIgPT09ICdmdW5jdGlvbicpIHtcblx0XHRcdFx0dmFsdWUgPSByZXZpdmVyKGtleSwgdmFsdWUpO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gJ1tvYmplY3QgT2JqZWN0XScpIHtcblx0XHRcdFx0Y29uc3QgaSA9IHRvSW5zdGFuY2UodmFsdWUsIHRydWUpO1xuXHRcdFx0XHRpZiAoaSkge1xuXHRcdFx0XHRcdHJldHVybiBpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHR9KTtcblx0fTtcblxuSlNPTi5wYXJzZSA9IGdvYmxKU09OUGFyc2U7XG5cbmV4cG9ydCB7IEdvYmxFbnRpdHksIEdvYmxTaW5nbGVQS0VudGl0eSB9O1xuIl19