import GoblSinglePKEntity from './GoblSinglePKEntity.js';
import GoblEntity from './GoblEntity.js';
import { toInstance } from './gobl.js';
export * from './gobl.js';
export * from './GoblSinglePKEntity.js';
export * from './GoblEntity.js';
const realJSONParse = JSON.parse, goblJSONParse = function (text, reviver) {
    return realJSONParse(text, function (key, value) {
        if (typeof reviver === 'function') {
            value = reviver(key, value);
        }
        if (Object.prototype.toString.call(value) === '[object Object]') {
            const i = toInstance(value, true);
            if (i) {
                return i;
            }
        }
        return value;
    });
};
JSON.parse = goblJSONParse;
export { GoblEntity, GoblSinglePKEntity };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxrQkFBa0IsTUFBTSx5QkFBeUIsQ0FBQztBQUN6RCxPQUFPLFVBQVUsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3ZDLGNBQWMsV0FBVyxDQUFDO0FBQzFCLGNBQWMseUJBQXlCLENBQUM7QUFDeEMsY0FBYyxpQkFBaUIsQ0FBQztBQUVoQyxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsS0FBSyxFQUMvQixhQUFhLEdBQUcsVUFDZixJQUFTLEVBQ1QsT0FBdUM7SUFFdkMsT0FBTyxhQUFhLENBQUMsSUFBSSxFQUFFLFVBQVUsR0FBRyxFQUFFLEtBQUs7UUFDOUMsSUFBSSxPQUFPLE9BQU8sS0FBSyxVQUFVLEVBQUU7WUFDbEMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDNUI7UUFFRCxJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxpQkFBaUIsRUFBRTtZQUNoRSxNQUFNLENBQUMsR0FBRyxVQUFVLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ2xDLElBQUksQ0FBQyxFQUFFO2dCQUNOLE9BQU8sQ0FBQyxDQUFDO2FBQ1Q7U0FDRDtRQUVELE9BQU8sS0FBSyxDQUFDO0lBQ2QsQ0FBQyxDQUFDLENBQUM7QUFDSixDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMsS0FBSyxHQUFHLGFBQWEsQ0FBQztBQUUzQixPQUFPLEVBQUUsVUFBVSxFQUFFLGtCQUFrQixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR29ibFNpbmdsZVBLRW50aXR5IGZyb20gJy4vR29ibFNpbmdsZVBLRW50aXR5LmpzJztcbmltcG9ydCBHb2JsRW50aXR5IGZyb20gJy4vR29ibEVudGl0eS5qcyc7XG5pbXBvcnQgeyB0b0luc3RhbmNlIH0gZnJvbSAnLi9nb2JsLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vZ29ibC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL0dvYmxTaW5nbGVQS0VudGl0eS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL0dvYmxFbnRpdHkuanMnO1xuXG5jb25zdCByZWFsSlNPTlBhcnNlID0gSlNPTi5wYXJzZSxcblx0Z29ibEpTT05QYXJzZSA9IGZ1bmN0aW9uIChcblx0XHR0ZXh0OiBhbnksXG5cdFx0cmV2aXZlcj86IChrZXk6IGFueSwgdmFsdWU6IGFueSkgPT4gYW55XG5cdCkge1xuXHRcdHJldHVybiByZWFsSlNPTlBhcnNlKHRleHQsIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG5cdFx0XHRpZiAodHlwZW9mIHJldml2ZXIgPT09ICdmdW5jdGlvbicpIHtcblx0XHRcdFx0dmFsdWUgPSByZXZpdmVyKGtleSwgdmFsdWUpO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gJ1tvYmplY3QgT2JqZWN0XScpIHtcblx0XHRcdFx0Y29uc3QgaSA9IHRvSW5zdGFuY2UodmFsdWUsIHRydWUpO1xuXHRcdFx0XHRpZiAoaSkge1xuXHRcdFx0XHRcdHJldHVybiBpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHR9KTtcblx0fTtcblxuSlNPTi5wYXJzZSA9IGdvYmxKU09OUGFyc2U7XG5cbmV4cG9ydCB7IEdvYmxFbnRpdHksIEdvYmxTaW5nbGVQS0VudGl0eSB9O1xuIl19